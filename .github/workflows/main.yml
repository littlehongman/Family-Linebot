name: Deploy Lambda Function

on:
  push:
    branches:
      - main

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: "my-terraform-state-bucket-github-actions"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.set-cache-key.outputs.key }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies and build Lambda
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -t package
          cp *.py package/
          cd package
          zip -r ../lambda_package.zip .

      - name: Generate cache key
        id: set-cache-key
        run: |
          echo "key=lambda-zip-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Cache built Lambda package
        uses: actions/cache@v2
        with:
          path: lambda_package.zip
          key: lambda-zip-${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore cached Lambda package
        uses: actions/cache@v2
        with:
          path: lambda_package.zip
          key: ${{ needs.build.outputs.cache-key }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Clean up
        run: rm -f lambda_package.zip
